# 创建 Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx

---

# ServiceAccount: 为 Ingress Controller 配置 ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx
  namespace: ingress-nginx

---

# ClusterRole: 配置完全开放的权限
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-nginx-full-access
rules:
  - apiGroups: [ "" ]
    resources: [ "*" ]
    verbs: [ "*" ]
  - apiGroups: [ "apps" ]
    resources: [ "*" ]
    verbs: [ "*" ]
  - apiGroups: [ "networking.k8s.io" ]
    resources: [ "*" ]
    verbs: [ "*" ]
  - apiGroups: [ "discovery.k8s.io" ]
    resources: [ "*" ]
    verbs: [ "*" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "*" ]
    verbs: [ "*" ]
  - apiGroups: [ "policy" ]
    resources: [ "*" ]
    verbs: [ "*" ]
  - apiGroups: [ "rbac.authorization.k8s.io" ]
    resources: [ "*" ]
    verbs: [ "*" ]

---

# ClusterRoleBinding: 将 ClusterRole 绑定到 ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx-full-access-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-full-access
subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx

---

# Deployment: 部署 NGINX Ingress Controller
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: ingress-nginx
      containers:
        - name: nginx-ingress-controller
          imagePullPolicy: IfNotPresent
          image: k8s.gcr.io/ingress-nginx/controller:v1.8.1
          ports:
            - containerPort: 22
            - containerPort: 80
            - containerPort: 443
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

---

# Service: 暴露 NGINX Ingress Controller 的端口
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
      nodePort: 30080
    - name: https
      port: 443
      targetPort: 443
      protocol: TCP
      nodePort: 30443
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx
spec:
  controller: k8s.io/ingress-nginx